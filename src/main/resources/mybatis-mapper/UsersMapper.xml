<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project3.yakdo.repository.mybatis.UsersMapper">
<!-- INSERT -->
	<insert id="insertUsers">
		INSERT INTO users (USER_NO, USER_EMAIL, USER_PW, USER_NICK, JOIN_DATE, USER_GRADE, USER_STATUS, LEAVE_DATE, BLOCK_REASON)
		VALUES (user_no_pk.NEXTVAL, #{userEmail}, #{userPw}, #{userNick}, sysdate, 2, 0, null, null)
	</insert>

	<insert id="insertUsersInfo">
		INSERT INTO users_info (USER_NO, FAMILY_NO, BIRTH, GENDER, WEIGHT, FAMILY_NICK)
		VALUES (${userNo}, (SELECT NVL(MAX(family_no), 0)+1 FROM users_info WHERE user_no = ${userNo}), #{birth}, #{gender}, #{weight}, #{familyNick})
	</insert>
	
	<insert id="insertUsingDrugs" parameterType="Map">
		INSERT INTO users_info_using_drugs VALUES (${userNo}, #{familyNo}, #{usingDrug})
	</insert>
	
	<insert id="insertAllergy" parameterType="Map">
		INSERT INTO users_info_allergy VALUES (${userNo}, #{familyNo}, #{allergy})
	</insert>
	
<!-- SELECT -->
	
	<select id="selectUsersInfoByFamilyNick" resultType="UsersInfo">
		SELECT * FROM users_info WHERE family_nick = '${familyNick}' AND user_no = ${userNo}
	</select>
	
	<select id="selectUserByUserEmail" parameterType="String" resultType="Users">
		SELECT user_no, user_email, user_pw, user_nick, join_date
			, user_grade, user_status, leave_date, block_reason
		FROM users
		WHERE
		user_email = #{userEmail} AND USER_STATUS = 0
	</select>

	<select id="selectAllUsers" resultType="Users">
		SELECT user_no,
		user_email, user_pw, user_nick, join_date
		, user_grade, user_status,
		leave_date, block_reason
		FROM users
	</select>

<!-- DELETE -->
	<delete id="deleteAllUsers">
		DELETE FROM users
	</delete>


	<!-- 관리자 페이지 회원관리 관련 / 작성자: 배고운 -->



	<!-- Users테이블에서 user_no로 회원 찾기 / 작성자 : 배고운 -->

	<select id="selectByUserNoInUsersT" resultType="Users">
		select * from
		users where user_no = #{userNo}
	</select>



	<!-- 회원등급수정 / 작성자 : 배고운 -->

	<update id="updateUserGrade" parameterType="Users">
		update users
		set
		user_grade = #{updateUser.userGrade},
		user_status = #{updateUser.userStatus},
		block_reason = #{updateUser.blockReason}
		where user_no = #{userNo}
	</update>


	<!-- 회원블락처리 / 작성자 : 배고운 -->
	<update id="updateUserStatus" parameterType="Users">
		update users
		set
		user_status = {updateUser.userStatus}
		block_reason = {updateUser.blockReason}
		where user_no = #{userNo}
	</update>
	

	<!-- users 목록 회원번호,이메일,닉네임 검색 결과 10개씩 잘라서 출력 / 작성자: 배고운 -->
	<!--	회원 목록 검색 페이징 처리 시도중 0104 01:02 -->
	<select id="searchUserList" resultType="Users" 
	parameterType="SearchCriteria">
	 select user_no, user_email,user_nick,join_date,
        user_grade,user_status,leave_date,block_reason
        from
        (
        select user_no, user_email,user_nick,join_date,
        user_grade,user_status,leave_date,block_reason,
		(row_number() over(order by user_no asc)) as rNum
		from users
        <where> 
        <if test="searchType == 'userNo'">
        and user_no = #{keyword}
        </if>
        <if test="searchType == 'email'">
        and user_email like '%' || #{keyword} || '%'
        </if>
        <if test="searchType == 'nick'">
        and user_nick like '%' || #{keyword} || '%'
        </if>
        </where>
        )
       where rNum between #{rowStart} and #{rowEnd}
	   order by user_no asc
	</select>
	
<!-- 	회원 검색 조건에 맞는 게시물 갯수 구하는 쿼리 / 작성자: 배고운 -->
<select id="countSearchUsers" resultType="int">
	
		select count(user_no)
		from users
		<where>
			<if test="searchType == 'userNo'"> 
			AND user_no = #{keyword}  
			</if>
			<if test="searchType == 'email'"> 
			AND user_email like '%' || #{keyword} || '%' 
			</if>
				<if test="searchType == 'nick'"> 
			AND user_nick like '%' || #{keyword} || '%' 
			</if>
		</where>
	</select>
	
	
	<!-- 	UserNo로 UsersInfo를 리스트타입으로 반환 / 담당자 : 홍준표 -->
	<select id="selectUsersInfoByUserNo" resultType="UsersInfo">
		SELECT * FROM users_info WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 	UserNo와 FamilyNo로 UsingDrug을 리스트타입으로 반환 / 담당자 : 홍준표 -->
	<select id="selectUsingDrugByUserNoAndFamilyNo" resultType="String">
		SELECT ITEM_SEQ FROM users_info_using_drugs WHERE USER_NO = #{userNo} AND FAMILY_NO = #{familyNo}
	</select>
	
	<!-- 	UserNo와 FamilyNo로 AllergyItemSeq를 리스트타입으로 반환 / 담당자 : 홍준표 -->
	<select id="selectAllergyByUserNoAndFamillyNo" resultType="String">
		SELECT ITEM_SEQ FROM users_info_allergy WHERE USER_NO = #{userNo} AND FAMILY_NO = #{familyNo}
	</select>
	
	
</mapper>